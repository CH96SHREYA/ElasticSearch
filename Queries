1) Select the detail of the employee whose name start with P.

GET /office_department/_search
{
  "_source":["employees.empId","employees.contactNo", "employees.emailId","employees.empName"],
  "query": {
    "nested": {
      "path": "employees",
      "query": {
        "wildcard": {
          "employees.empName": {
            "value": "p*"
          }
        }
      }
    }
  }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
2)  Select the detail of employee whose emailId is in gmail.
 Used fuzziness here
 
 GET /office_department/_search
{
  "_source":["employees.empId","employees.contactNo", "employees.emailId","employees.empName"],
  "query": {
    "nested": {
      "path": "employees",
      "query": {
        "match": {
          "employees.emailId": {
            "query": "@gmail.com",
            "fuzziness": "auto"
          }
      } }
    }
  }
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
3) Select the details of the employee who work either for department E-104 or E-102.
GET /office_department/_search
{
  "_source":["employees.empId","employees.contactNo", "employees.emailId","employees.empName"],
  "query": {
    "terms": {
      "DeptId.keyword": [
        "E-102",
        "E-104"
      ]
    }
  }
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
4)  What is the department name for DeptID E-102?

GET /office_department/_search
{
  "_source":["DeptName"],
  "query": {
    "term": {
      "DeptId.keyword": "E-102"
    }
  }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
5) List name of all employees whose name ends with a.
GET /office_department/_search
{
  "_source":false,
  "query": {
    "nested": {
      "path": "employees",
      "inner_hits": {}, 
      "query": {
        "regexp": {
          "employees.empName": {
            "value": "[a-z]+a"
          }
        }
      }
    }
  }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
6)  How many project started in year 2010?
GET /office_department/_search
{
  "_source": "project_id",
  "query": {
    "term": {
      "client.startYear": {
        "value":2010
      }
    }
  }
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
7) How many project started and finished in the same year? (Not working but concept is right)
  GET /office_department/_search
  {
    "query": {
      "bool": {
        "must": [
          {"script": {
            "script":{
              "source": "doc['client.startYear'].value==doc['client.endYear'].value"
            }
          }}
        ]
      }
    }
  }
  ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  8) select the name of the employee whose name's 3rd charactor is 'h'.
  
  
GET /office_department/_search
{
  "_source":"employees.empName",
  "query": {
    "nested": {
      "path": "employees",
      "inner_hits": {
       
      }, 
      "query": {
        "regexp": {
          "employees.empName.keyword": {
            "value": "[a-zA-Z]+h*"
          }
        }
      }
    }
  }
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
9)  Select the department name of the company which is assigned to the employee whose employee id is grater 103.

GET /office_department/_search
  {
    "_source": "DeptName", 
    "query": {
      "nested": {
        "path": "employees",
        "query": {
          "range": {
            "employees.empId": {
              "gte": 103
              
            }
          }
        }
      }
    }
  }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
10)  Select the name of the employee who is working under Abhishek.
 GET /office_department/_search
  {
    "_source":"employees.empId",
    "query": {
      "nested": {
        "path": "employees",
        "inner_hits": {}, 
        "query": {
          "term": {
            "employees.empName.keyword": {
              "value": "Abhishek"
            }
          }
        }
      }
    }
  }
  
  
  
  
   GET /office_department/_search
  {
    "_source":"employees.empName",
    "query": {
      "nested": {
        "path": "employees",
        "inner_hits": {}, 
        "query": {
          "term": {
            "employees.empHead": {
              "value": "105"
            }
          }
        }
      }
    }
  }
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  
  11) select the indian clinets details.
  GET /office_department/_search
{
 "_source": ["client.clientId","client.clientCountryName","client.clientCountryCode","client.startYear","client.endYear"],
 
 "query": {
   "term": {
     "client.clientCountryName.keyword": {
       "value": "India"
     }
   }
 }
}



